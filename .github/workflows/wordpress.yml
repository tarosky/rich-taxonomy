name: Deploy Plugin

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: PHP UnitTest
    strategy:
      matrix:
        php: [ '7.4', '8.0' ] # PHP versions to check.
        wp: [ 'latest', '5.9' ]      # WordPress version to check.
    uses: tarosky/workflows/.github/workflows/wp-unit-test.yml@main
    with:
      php_version: ${{ matrix.php }}
      wp_version: ${{ matrix.wp }}

  phpcs:
    name: Check PHP Codes
    uses: tarosky/workflows/.github/workflows/phpcs.yml@main
    with:
      version: 7.4

  assets:
    name: Check Assets
    uses: tarosky/workflows/.github/workflows/npm.yml@main
    with:
      node_version: 16
      package: package

  status-check:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [ test, phpcs, assets ]
    steps:
      - name: Display
        run: echo "All Green!"

  release:
    name: Deploy GitHub Release
    needs: [ status-check ]
    if: contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://wordpress.org/plugins/rich-taxonomy/
    steps:
      - uses: actions/checkout@master

      - name: Confirm
        run: echo ${{ needs.pre_release.outputs.upload_url }}

      - name: Setup PHP with composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install NPM
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build package.
        run: bash bin/build.sh ${{ github.ref }}

      - name: Deploy to WordPress Directory
        id: deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          generate-zip: true
        env:
          SVN_USERNAME: ${{ secrets.WP_ORG_USERNAME_TAROSKY }}
          SVN_PASSWORD: ${{ secrets.WP_ORG_PASSWORD_TAROSKY }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
